3-3-2015 3hrs - started converting tutorial and got words saving into a collection
3-4-2015 8hrs - organized the files into reasonable directory structure; set up iron-router and set up the main app routes;
  built a rough draft with a little CSS of the build page that had the form elements and could add words to a collection but still wasn't ready to add to the entry collection
3-5-2015 8hrs - added home, view, build and admin links into main.html; fixed error when accessing view page without a /id; finished off the
  build page's basic functionality, and got a dirty list of entries and single entry viewing on view page;added a feature to the admin page
  to import some text files I created from copying and pasting the output of the old google app engine version of this game, so we can now
  easily get all the old words into the game by pasting them into the box on the admin page
3-6-2015 - 7hrs - changed dates to use date object instead of timestamp, as recommended by mongodb docs; got rid of clear word collection button
  in admin page; made build page word list do an infinite horizontal scroll within its container; changed the getting of the word cards to getting
  a single randomized card with each button click; added working discard button to each card; cleaned up the view a little bit (the view view if you will)
  and split the stylesheet out into view.css and build.css
3-7-2015 - 5hrs - added render function to build.js so that it gets called when a card is drawn and when the page first renders so that the
  cards always get properly floated to the right; made the entry content field expand to 100% so that its width doesn't screw up the build page on mobile devices;
  tried to get a testing framework running but nothing seems to work on windows
3-22-2015 - 5hrs - figured out how to create meteor packages in windows, got a basic speechManager package working with feature checking,
  enable/disable (including saving to localStorage) and speech output abilities for text-to-speech. Got this plugged into the view page
  so that it's speaking the waffles you click on and muting/unmuting via a new button. Also added startup.js class to init the speechmanager,
  and moved all the css into the views folder, since I just find it easier to navigate this way. I prefer to organize based on what it's doing
  in the app rather than by file extension.
3-23-2015 - 7hrs - fixed the chrome text-to-speech issue by breaking text into sentences... though it will still fail for long sentences. Turned a couple
  classes into js- prefixed classes for specific use by javaScript. Added tinymce (loading from cdn because I couldn't get it to work when loading it from
  local) and got the buttons set up the way I think I want it, and got it saving the html to the collection, and saving its state through the session. Still
  need to fix the speech so that it doesn't read out the html tags.
3-24-2015 - 0.5hrs - fixed the issue where the screenreader was reading all the html tags.
3-25-2015 - 3hrs - built tinymce speech plugin with functional textToSpeech button and menu item.
3-27-2015 - 4hrs - centered the main content of the view page using orientation and resize event listeners. Way more complex than it should have been.
  also did a little more code cleanup
3-28-2015 - 3hrs - fixed up the item centering in android (the stackoverflow thread I referenced had the wrong name for the orientationchange) and also added
  a default width value for the items since when it's on a real server the render function happens before the data is available. There should be a better way, like a 'renderComplete' function
  or something. Also moved the collection update functionality into collection.js methods which will ultimately have user account and removed insecure package.
  security.